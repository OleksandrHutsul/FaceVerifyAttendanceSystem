@model IEnumerable<FaceVerifyAttendanceSystem.BL.Models.LessonDTO>

@{
    ViewData["Title"] = "Home Page";
    int pageNumber = ViewBag.PageNumber;
    int totalPages = ViewBag.TotalPages;
}

<main>
    <section class="py-5 text-center container">
        <div class="row py-lg-5">
            <div class="col-lg-6 col-md-8 mx-auto">
                <h1 class="fw-light">Album example</h1>
                <p class="lead text-body-secondary">Something short and leading about the collection below—its contents, the creator, etc. Make it short and sweet, but not too short so folks don’t simply skip over it entirely.</p>
                <p>
                    <a href="#" class="btn btn-primary my-2">Main call to action</a>
                    <a href="#" class="btn btn-secondary my-2">Secondary action</a>
                </p>
            </div>
        </div>
    </section>
</main>

<hr />
<h2>Recommended Course</h2>
<hr />
<div class="album py-5">
    <div class="container">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
            @foreach (var course in Model)
            {
                <div class="col">
                    <div class="card shadow-sm">
                        <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false">
                            <title>@course.NameCourse</title>
                            <rect width="100%" height="100%" fill="#55595c"></rect>
                            <foreignObject x="0" y="0" width="100%" height="100%">
                                <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; justify-content: center; align-items: center; height: 100%; padding: 5px; box-sizing: border-box;">
                                    <span style="color: #eceeef; text-align: center; overflow-wrap: break-word; word-wrap: break-word;">@course.NameCourse</span>
                                </div>
                            </foreignObject>
                        </svg>
                        <div class="card-body">
                            <p class="card-text">
                                @if (@course.DescriptionCourse == null)
                                {
                                    @course.NameCourse
                                }
                                else
                                {
                                    @course.DescriptionCourse
                                }
                                <br />
                                @course.OwnerCourse
                            </p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="location.href='@Url.Action("Information", "Course")'">View</button>

                                    @if (User.IsInRole("Teacher"))
                                    {
                                        <button type="button" class="btn btn-sm btn-outline-secondary"
                                                onclick="location.href='@Url.Action("Update", "Course", new { id = course.Id })'">
                                            Edit
                                        </button>
                                    }
                                </div>
                                <small class="text-body-secondary">
                                    @if (course.StartCourse == null && course.EndCourse == null)
                                    {
                                        @:NaN
                                    }
                                    else
                                    {
                                        @($"Start: {course.StartCourse?.ToString("d")}")
                                        <br />
                                        @($"Finish: {course.EndCourse?.ToString("d")}")
                                    }
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div>
    <ul class="pagination">
        @if (pageNumber > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber - 1 })">&laquo;</a>
            </li>
        }

        @for (var i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == pageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
            </li>
        }

        @if (pageNumber < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber + 1 })">&raquo;</a>
            </li>
        }
    </ul>
</div>